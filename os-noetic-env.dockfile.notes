#make network docker network for robots to talk
docker network create turtlesim

#Start ROS Master Container
docker container run -dit --net turtlesim --name ros-turtlesim-master ros:noetic-robot roscore

docker container run -dit --net turtlesim --name ros_essentials_master kurickabides/ros_essentials_cpp:v1 roscore

sudo apt-get install ros-$(rosversion -d)-cv-bridge
sudo apt-get install ros-$(rosversion -d)-vision-opencv
sudo apt-get install ros-$(rosversion -d)-image-common



#Start a container for the Catkin WORKspace:

docker run -it --net turtlesim --env ROS_HOSTNAME=ros-turtlesim-catkin --env ROS_MASTER_URI=http://ros-turtlesim-master:11311 -v //c/Projects/AWS/RoboMaker/turtlesim/catkin_ws:/root/turtlesim/catkin_ws --name ros-turtlesim-catkin ros:noetic-robot /bin/bash
Different containers can be used 
docker run -it --net turtlesim --env ROS_HOSTNAME=ros-c3po-client --env ROS_MASTER_URI=http://ros-c3po-master:11311 -v //c/Projects/AWS/RoboMaker/Learning/lesson1/catkin_ws:/root/lesson1/catkin_ws --name ros-c3po-master ros:noetic-robot /bin/bash

docker run -it --name ros-c3po-master kurickabides/ros-c3po-master:v1 /bin/bash

#add below to docker file this is simalar 
# Environment setup
source /opt/ros/noetic/setup.bash


# Build Catkin

cd /root/turtlesim/catkin_ws

cd /root/lesson1/catkin_ws
mkdir src

cd src
catkin_make

# Devel environment setup
source devel/setup.bash

# Create package with rospy and std_msg
cd src/
catkin_create_pkg turtlesim rospy std_msgs
cd ..

# Rebuild Catkin
catkin_make

